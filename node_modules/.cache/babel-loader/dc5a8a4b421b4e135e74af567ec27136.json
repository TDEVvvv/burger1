{"ast":null,"code":"var _jsxFileName = \"/Users/tmg/Desktop/burger/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport burgerReducer from \"./redux/reducer/burgerReducer\";\nimport orderReducer from \"./redux/reducer/orderReducer\";\nimport signupReducer from \"./redux/reducer/signupLoginReducer\";\n\nconst loggerMiddlaware = store => {\n  return next => {\n    return action => {\n      console.log(\"MyLoggerMiddleware: Dispatching ==> \", action);\n      console.log(\"MyLoggerMiddleware: State BEFORE : \", store.getState());\n      const result = next(action);\n      console.log(\"MyLoggerMiddleware: State AFTER : \", store.getState());\n      return result;\n    };\n  };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst reducers = combineReducers({\n  burgerReducer,\n  orderReducer,\n  signupReducer\n});\nconst middlewares = [loggerMiddlaware, thunk];\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares)));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/tmg/Desktop/burger/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","createStore","applyMiddleware","combineReducers","compose","Provider","thunk","burgerReducer","orderReducer","signupReducer","loggerMiddlaware","store","next","action","console","log","getState","result","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducers","middlewares","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,SAAOC,IAAI,IAAI;AACb,WAAOC,MAAM,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,MAApD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDJ,KAAK,CAACK,QAAN,EAAnD;AACA,YAAMC,MAAM,GAAGL,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDJ,KAAK,CAACK,QAAN,EAAlD;AACA,aAAOC,MAAP;AACD,KAND;AAOD,GARD;AASD,CAVD;;AAYA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+ChB,OAAxE;AAEA,MAAMiB,QAAQ,GAAGlB,eAAe,CAAC;AAC/BI,EAAAA,aAD+B;AAE/BC,EAAAA,YAF+B;AAG/BC,EAAAA;AAH+B,CAAD,CAAhC;AAMA,MAAMa,WAAW,GAAG,CAACZ,gBAAD,EAAmBJ,KAAnB,CAApB;AAEA,MAAMK,KAAK,GAAGV,WAAW,CACvBoB,QADuB,EAEvBH,gBAAgB,CAAChB,eAAe,CAAC,GAAGoB,WAAJ,CAAhB,CAFO,CAAzB;AAKAzB,QAAQ,CAAC0B,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEa,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACA1B,aAAa,CAAC2B,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport burgerReducer from \"./redux/reducer/burgerReducer\";\nimport orderReducer from \"./redux/reducer/orderReducer\";\nimport signupReducer from \"./redux/reducer/signupLoginReducer\";\n\nconst loggerMiddlaware = store => {\n  return next => {\n    return action => {\n      console.log(\"MyLoggerMiddleware: Dispatching ==> \", action);\n      console.log(\"MyLoggerMiddleware: State BEFORE : \", store.getState());\n      const result = next(action);\n      console.log(\"MyLoggerMiddleware: State AFTER : \", store.getState());\n      return result;\n    };\n  };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n  burgerReducer,\n  orderReducer,\n  signupReducer\n});\n\nconst middlewares = [loggerMiddlaware, thunk];\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}