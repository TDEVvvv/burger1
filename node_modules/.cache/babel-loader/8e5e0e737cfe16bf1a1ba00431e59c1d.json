{"ast":null,"code":"var _jsxFileName = \"/Users/tmg/Desktop/burger/src/pages/SignupPage/index.js\";\nimport React, { Component } from \"react\";\nimport Button from \"../../components/General/Button\";\nimport css from \"./style.module.css\";\nimport * as actions from \"../../redux/actions/signupActions\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/General/Spinner\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password1: \"\",\n      password2: \"\",\n      error: \"\"\n    };\n\n    this.changeEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.changePassword1 = e => {\n      this.setState({\n        password1: e.target.value\n      });\n    };\n\n    this.changePassword2 = e => {\n      this.setState({\n        password2: e.target.value\n      });\n    };\n\n    this.signup = () => {\n      if (this.state.password1 === this.state.password2) {\n        this.props.signupUser(this.state.email, this.state.password1);\n      } else {\n        this.setState({\n          error: \"Нууц үгнүүд хоорондоо таарахгүй байна!\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: css.Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.userId && React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"\\u0411\\u04AF\\u0440\\u0442\\u0433\\u044D\\u043B\\u0438\\u0439\\u043D \\u0444\\u043E\\u0440\\u043C\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u0422\\u0430 \\u04E9\\u04E9\\u0440\\u0438\\u0439\\u043D \\u043C\\u044D\\u0434\\u044D\\u044D\\u043B\\u043B\\u044D\\u044D \\u043E\\u0440\\u0443\\u0443\\u043B\\u043D\\u0430 \\u0443\\u0443\"), React.createElement(\"input\", {\n      onChange: this.changeEmail,\n      type: \"text\",\n      placeholder: \"\\u0418\\u043C\\u044D\\u0439\\u043B \\u0445\\u0430\\u044F\\u0433\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.changePassword1,\n      type: \"password\",\n      placeholder: \"\\u041D\\u0443\\u0443\\u0446 \\u04AF\\u0433\\u044D\\u044D \\u043E\\u0440\\u0443\\u0443\\u043B\\u043D\\u0430 \\u0443\\u0443\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.changePassword2,\n      type: \"password\",\n      placeholder: \"\\u041D\\u0443\\u0443\\u0446 \\u04AF\\u0433\\u044D\\u044D \\u0434\\u0430\\u0432\\u0442\\u0430\\u043D \\u043E\\u0440\\u0443\\u0443\\u043B\\u043D\\u0430 \\u0443\\u0443\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), this.state.error && React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.error), this.props.firebaseError && React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.firebaseError), this.props.saving && React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Button, {\n      text: \"\\u0411\\u04AE\\u0420\\u0422\\u0413\\u04AE\\u04AE\\u041B\\u042D\\u0425\",\n      btnType: \"Success\",\n      daragdsan: this.signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    saving: state.signupReducer.saving,\n    firebaseError: state.signupReducer.firebaseError,\n    userId: state.signupReducer.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupUser: (email, password) => dispatch(actions.signupUser(email, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Users/tmg/Desktop/burger/src/pages/SignupPage/index.js"],"names":["React","Component","Button","css","actions","connect","Spinner","Redirect","Signup","state","email","password1","password2","error","changeEmail","e","setState","target","value","changePassword1","changePassword2","signup","props","signupUser","render","userId","color","firebaseError","saving","mapStateToProps","signupReducer","mapDispatchToProps","dispatch","password"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"../../components/General/Button\";\r\nimport css from \"./style.module.css\";\r\nimport * as actions from \"../../redux/actions/signupActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/General/Spinner\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  changeEmail = e => {\r\n    this.setState({ email: e.target.value });\r\n  };\r\n\r\n  changePassword1 = e => {\r\n    this.setState({ password1: e.target.value });\r\n  };\r\n\r\n  changePassword2 = e => {\r\n    this.setState({ password2: e.target.value });\r\n  };\r\n\r\n  signup = () => {\r\n    if (this.state.password1 === this.state.password2) {\r\n      this.props.signupUser(this.state.email, this.state.password1);\r\n    } else {\r\n      this.setState({ error: \"Нууц үгнүүд хоорондоо таарахгүй байна!\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={css.Signup}>\r\n        {this.props.userId && <Redirect to=\"/\" />}\r\n\r\n        <h1>Бүртгэлийн форм</h1>\r\n        <div>Та өөрийн мэдээллээ оруулна уу</div>\r\n        <input\r\n          onChange={this.changeEmail}\r\n          type=\"text\"\r\n          placeholder=\"Имэйл хаяг\"\r\n        />\r\n        <input\r\n          onChange={this.changePassword1}\r\n          type=\"password\"\r\n          placeholder=\"Нууц үгээ оруулна уу\"\r\n        />\r\n        <input\r\n          onChange={this.changePassword2}\r\n          type=\"password\"\r\n          placeholder=\"Нууц үгээ давтан оруулна уу\"\r\n        />\r\n        {this.state.error && (\r\n          <div style={{ color: \"red\" }}>{this.state.error}</div>\r\n        )}\r\n\r\n        {this.props.firebaseError && (\r\n          <div style={{ color: \"red\" }}>{this.props.firebaseError}</div>\r\n        )}\r\n\r\n        {this.props.saving && <Spinner />}\r\n\r\n        <Button text=\"БҮРТГҮҮЛЭХ\" btnType=\"Success\" daragdsan={this.signup} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    saving: state.signupReducer.saving,\r\n    firebaseError: state.signupReducer.firebaseError,\r\n    userId: state.signupReducer.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signupUser: (email, password) =>\r\n      dispatch(actions.signupUser(email, password))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n"]},"metadata":{},"sourceType":"module"}