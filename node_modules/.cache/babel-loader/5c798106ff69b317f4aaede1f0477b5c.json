{"ast":null,"code":"var _jsxFileName = \"/Users/tmg/Desktop/burger/src/components/BuildControls/index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions/burgerActions\";\nimport BuildControl from \"../BuildControl\";\nimport css from \"./style.module.css\";\n\nconst BuildControls = props => {\n  const disabledIngredients = { ...props.burgeriinOrts\n  };\n\n  for (let key in disabledIngredients) {\n    disabledIngredients[key] = disabledIngredients[key] <= 0;\n  }\n\n  return React.createElement(\"div\", {\n    className: css.BuildControls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"\\u0411\\u0443\\u0440\\u0433\\u0435\\u0440\\u0438\\u0439\\u043D \\u04AF\\u043D\\u044D : \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.price)), Object.keys(props.ingredientNames).map(el => React.createElement(BuildControl, {\n    key: el,\n    ortsHasah: props.ortsHasah,\n    ortsNemeh: props.ortsNemeh,\n    disabled: disabledIngredients,\n    type: el,\n    orts: props.ingredientNames[el],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: props.showConfirmModal,\n    disabled: !props.purchasing,\n    className: css.OrderButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\u0417\\u0410\\u0425\\u0418\\u0410\\u041B\\u0410\\u0425\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    burgeriinOrts: state.burgerReducer.ingredients,\n    price: state.burgerReducer.totalPrice,\n    purchasing: state.burgerReducer.purchasing,\n    ingredientNames: state.burgerReducer.ingredientNames\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    ortsNemeh: ortsNer => dispatch(actions.addIngredient(ortsNer)),\n    ortsHasah: ortsNer => dispatch(actions.removeIngredient(ortsNer))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BuildControls);","map":{"version":3,"sources":["/Users/tmg/Desktop/burger/src/components/BuildControls/index.js"],"names":["React","connect","actions","BuildControl","css","BuildControls","props","disabledIngredients","burgeriinOrts","key","price","Object","keys","ingredientNames","map","el","ortsHasah","ortsNemeh","showConfirmModal","purchasing","OrderButton","mapStateToProps","state","burgerReducer","ingredients","totalPrice","mapDispatchToProps","dispatch","ortsNer","addIngredient","removeIngredient"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mCAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAMC,mBAAmB,GAAG,EAAE,GAAGD,KAAK,CAACE;AAAX,GAA5B;;AAEA,OAAK,IAAIC,GAAT,IAAgBF,mBAAhB,EAAqC;AACnCA,IAAAA,mBAAmB,CAACE,GAAD,CAAnB,GAA2BF,mBAAmB,CAACE,GAAD,CAAnB,IAA4B,CAAvD;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAEL,GAAG,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASC,KAAK,CAACI,KAAf,CADlB,CADF,EAKGC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,eAAlB,EAAmCC,GAAnC,CAAuCC,EAAE,IACxC,oBAAC,YAAD;AACE,IAAA,GAAG,EAAEA,EADP;AAEE,IAAA,SAAS,EAAET,KAAK,CAACU,SAFnB;AAGE,IAAA,SAAS,EAAEV,KAAK,CAACW,SAHnB;AAIE,IAAA,QAAQ,EAAEV,mBAJZ;AAKE,IAAA,IAAI,EAAEQ,EALR;AAME,IAAA,IAAI,EAAET,KAAK,CAACO,eAAN,CAAsBE,EAAtB,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CALH,EAgBE;AACE,IAAA,OAAO,EAAET,KAAK,CAACY,gBADjB;AAEE,IAAA,QAAQ,EAAE,CAACZ,KAAK,CAACa,UAFnB;AAGE,IAAA,SAAS,EAAEf,GAAG,CAACgB,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAhBF,CADF;AA0BD,CAjCD;;AAmCA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLd,IAAAA,aAAa,EAAEc,KAAK,CAACC,aAAN,CAAoBC,WAD9B;AAELd,IAAAA,KAAK,EAAEY,KAAK,CAACC,aAAN,CAAoBE,UAFtB;AAGLN,IAAAA,UAAU,EAAEG,KAAK,CAACC,aAAN,CAAoBJ,UAH3B;AAILN,IAAAA,eAAe,EAAES,KAAK,CAACC,aAAN,CAAoBV;AAJhC,GAAP;AAMD,CAPD;;AASA,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLV,IAAAA,SAAS,EAAEW,OAAO,IAAID,QAAQ,CAACzB,OAAO,CAAC2B,aAAR,CAAsBD,OAAtB,CAAD,CADzB;AAELZ,IAAAA,SAAS,EAAEY,OAAO,IAAID,QAAQ,CAACzB,OAAO,CAAC4B,gBAAR,CAAyBF,OAAzB,CAAD;AAFzB,GAAP;AAID,CALD;;AAOA,eAAe3B,OAAO,CAACoB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CrB,aAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/burgerActions\";\r\nimport BuildControl from \"../BuildControl\";\r\nimport css from \"./style.module.css\";\r\n\r\nconst BuildControls = props => {\r\n  const disabledIngredients = { ...props.burgeriinOrts };\r\n\r\n  for (let key in disabledIngredients) {\r\n    disabledIngredients[key] = disabledIngredients[key] <= 0;\r\n  }\r\n\r\n  return (\r\n    <div className={css.BuildControls}>\r\n      <p>\r\n        Бургерийн үнэ : <strong>{props.price}</strong>\r\n      </p>\r\n\r\n      {Object.keys(props.ingredientNames).map(el => (\r\n        <BuildControl\r\n          key={el}\r\n          ortsHasah={props.ortsHasah}\r\n          ortsNemeh={props.ortsNemeh}\r\n          disabled={disabledIngredients}\r\n          type={el}\r\n          orts={props.ingredientNames[el]}\r\n        />\r\n      ))}\r\n\r\n      <button\r\n        onClick={props.showConfirmModal}\r\n        disabled={!props.purchasing}\r\n        className={css.OrderButton}\r\n      >\r\n        ЗАХИАЛАХ\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    burgeriinOrts: state.burgerReducer.ingredients,\r\n    price: state.burgerReducer.totalPrice,\r\n    purchasing: state.burgerReducer.purchasing,\r\n    ingredientNames: state.burgerReducer.ingredientNames\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    ortsNemeh: ortsNer => dispatch(actions.addIngredient(ortsNer)),\r\n    ortsHasah: ortsNer => dispatch(actions.removeIngredient(ortsNer))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuildControls);\r\n"]},"metadata":{},"sourceType":"module"}