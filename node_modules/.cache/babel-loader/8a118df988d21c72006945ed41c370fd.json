{"ast":null,"code":"import axios from \"../../axios-orders\";\nexport const loadOrders = userId => {\n  return function (dispatch, getState) {\n    // Захиалгыг татаж эхлэлээ гэдгийг мэдэгдэнэ.\n    // Энийг хүлээж аваад Spinner ажиллаж эхлэнэ.\n    dispatch(loadOrdersStart());\n    const token = getState().signupReducer.token;\n    axios.get(`orders.json?&auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`).then(response => {\n      const loadedOrders = Object.entries(response.data).reverse();\n      dispatch(loadOrdersSuccess(loadedOrders));\n    }).catch(err => dispatch(loadOrdersError(err)));\n  };\n};\nexport const loadOrdersStart = () => {\n  return {\n    type: \"LOAD_ORDERS_START\"\n  };\n};\nexport const loadOrdersSuccess = loadedOrders => {\n  return {\n    type: \"LOAD_ORDERS_SUCCESS\",\n    orders: loadedOrders\n  };\n};\nexport const loadOrdersError = error => {\n  return {\n    type: \"LOAD_ORDERS_ERROR\",\n    error\n  };\n}; // Захиалгыг хадгалах\n\nexport const saveOrder = newOrder => {\n  return function (dispatch, getState) {\n    // Spinner ergelduulne\n    dispatch(saveOrderStart());\n    const token = getState().signupReducer.token; // Firebase ruu hadgalna\n\n    axios.post(`/orders.json?auth=${token}`, newOrder).then(response => {\n      dispatch(saveOrderSuccess());\n    }).catch(error => {\n      dispatch(saveOrderError(error));\n    });\n  };\n};\nexport const saveOrderStart = () => {\n  return {\n    type: \"SAVE_ORDER_START\"\n  };\n};\nexport const saveOrderSuccess = () => {\n  return {\n    type: \"SAVE_ORDER_SUCCESS\"\n  };\n};\nexport const saveOrderError = error => {\n  return {\n    type: \"SAVE_ORDER_ERROR\",\n    errorMessage: error\n  };\n};","map":{"version":3,"sources":["/Users/tmg/Desktop/burger/src/redux/actions/orderActions.js"],"names":["axios","loadOrders","userId","dispatch","getState","loadOrdersStart","token","signupReducer","get","then","response","loadedOrders","Object","entries","data","reverse","loadOrdersSuccess","catch","err","loadOrdersError","type","orders","error","saveOrder","newOrder","saveOrderStart","post","saveOrderSuccess","saveOrderError","errorMessage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGC,MAAM,IAAI;AAClC,SAAO,UAASC,QAAT,EAAmBC,QAAnB,EAA6B;AAClC;AACA;AACAD,IAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AAEA,UAAMC,KAAK,GAAGF,QAAQ,GAAGG,aAAX,CAAyBD,KAAvC;AAEAN,IAAAA,KAAK,CACFQ,GADH,CACQ,qBAAoBF,KAAM,8BAA6BJ,MAAO,GADtE,EAEGO,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMC,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAeH,QAAQ,CAACI,IAAxB,EAA8BC,OAA9B,EAArB;AACAZ,MAAAA,QAAQ,CAACa,iBAAiB,CAACL,YAAD,CAAlB,CAAR;AACD,KALH,EAMGM,KANH,CAMSC,GAAG,IAAIf,QAAQ,CAACgB,eAAe,CAACD,GAAD,CAAhB,CANxB;AAOD,GAdD;AAeD,CAhBM;AAkBP,OAAO,MAAMb,eAAe,GAAG,MAAM;AACnC,SAAO;AACLe,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMJ,iBAAiB,GAAGL,YAAY,IAAI;AAC/C,SAAO;AACLS,IAAAA,IAAI,EAAE,qBADD;AAELC,IAAAA,MAAM,EAAEV;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAMQ,eAAe,GAAGG,KAAK,IAAI;AACtC,SAAO;AACLF,IAAAA,IAAI,EAAE,mBADD;AAELE,IAAAA;AAFK,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMC,SAAS,GAAGC,QAAQ,IAAI;AACnC,SAAO,UAASrB,QAAT,EAAmBC,QAAnB,EAA6B;AAClC;AACAD,IAAAA,QAAQ,CAACsB,cAAc,EAAf,CAAR;AAEA,UAAMnB,KAAK,GAAGF,QAAQ,GAAGG,aAAX,CAAyBD,KAAvC,CAJkC,CAMlC;;AACAN,IAAAA,KAAK,CACF0B,IADH,CACS,qBAAoBpB,KAAM,EADnC,EACsCkB,QADtC,EAEGf,IAFH,CAEQC,QAAQ,IAAI;AAChBP,MAAAA,QAAQ,CAACwB,gBAAgB,EAAjB,CAAR;AACD,KAJH,EAKGV,KALH,CAKSK,KAAK,IAAI;AACdnB,MAAAA,QAAQ,CAACyB,cAAc,CAACN,KAAD,CAAf,CAAR;AACD,KAPH;AAQD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMG,cAAc,GAAG,MAAM;AAClC,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMO,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLP,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMQ,cAAc,GAAGN,KAAK,IAAI;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAE,kBADD;AAELS,IAAAA,YAAY,EAAEP;AAFT,GAAP;AAID,CALM","sourcesContent":["import axios from \"../../axios-orders\";\r\n\r\nexport const loadOrders = userId => {\r\n  return function(dispatch, getState) {\r\n    // Захиалгыг татаж эхлэлээ гэдгийг мэдэгдэнэ.\r\n    // Энийг хүлээж аваад Spinner ажиллаж эхлэнэ.\r\n    dispatch(loadOrdersStart());\r\n\r\n    const token = getState().signupReducer.token;\r\n\r\n    axios\r\n      .get(`orders.json?&auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then(response => {\r\n        const loadedOrders = Object.entries(response.data).reverse();\r\n        dispatch(loadOrdersSuccess(loadedOrders));\r\n      })\r\n      .catch(err => dispatch(loadOrdersError(err)));\r\n  };\r\n};\r\n\r\nexport const loadOrdersStart = () => {\r\n  return {\r\n    type: \"LOAD_ORDERS_START\"\r\n  };\r\n};\r\n\r\nexport const loadOrdersSuccess = loadedOrders => {\r\n  return {\r\n    type: \"LOAD_ORDERS_SUCCESS\",\r\n    orders: loadedOrders\r\n  };\r\n};\r\n\r\nexport const loadOrdersError = error => {\r\n  return {\r\n    type: \"LOAD_ORDERS_ERROR\",\r\n    error\r\n  };\r\n};\r\n\r\n// Захиалгыг хадгалах\r\nexport const saveOrder = newOrder => {\r\n  return function(dispatch, getState) {\r\n    // Spinner ergelduulne\r\n    dispatch(saveOrderStart());\r\n\r\n    const token = getState().signupReducer.token;\r\n\r\n    // Firebase ruu hadgalna\r\n    axios\r\n      .post(`/orders.json?auth=${token}`, newOrder)\r\n      .then(response => {\r\n        dispatch(saveOrderSuccess());\r\n      })\r\n      .catch(error => {\r\n        dispatch(saveOrderError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const saveOrderStart = () => {\r\n  return {\r\n    type: \"SAVE_ORDER_START\"\r\n  };\r\n};\r\n\r\nexport const saveOrderSuccess = () => {\r\n  return {\r\n    type: \"SAVE_ORDER_SUCCESS\"\r\n  };\r\n};\r\n\r\nexport const saveOrderError = error => {\r\n  return {\r\n    type: \"SAVE_ORDER_ERROR\",\r\n    errorMessage: error\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}